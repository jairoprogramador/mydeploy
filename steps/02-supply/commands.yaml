- name: "Verificar terraform"
  description: "verifica que terraform esté instalado"
  cmd: "terraform --version"
  outputs: 
    - probe: '(?m)^Terraform\s+v\d+\.\d+\.\d+$'

- name: "Verificar kubectl"
  description: "verifica que kubectl esté instalado"
  cmd: "kubectl version --client"
  outputs: 
    - probe: '(?m)^Client Version:\s+v\d+\.\d+\.\d+$'

- name: "Verificar kubelogin"
  description: "verifica que kubelogin esté instalado"
  cmd: "kubelogin --version"
  outputs: 
    - probe: '(?m)^kubelogin version'

- name: "Verificar Azure CLI"
  description: "verifica que Azure CLI esté instalado"
  cmd: "az --version"
  outputs: 
    - probe: '(?m)^azure-cli\s+\d+\.\d+\.\d+'
  
- name: "Iniciar sesión"
  description: "Permite autenticarse en Azure CLI y obtener un token de acceso valido"
  cmd: "az login"

- name: "Obtener ID de suscripción"
  description: "Obtiene el ID de la suscripción actual de Azure"
  cmd: "az account show --query id --output tsv"
  outputs:
    - name: "azure_subscription_id"
      description: "ID de la suscripción de Azure"
      probe: "(.+)"
  
#- name: "terraform apply bootstrap"
  #description: "we carry out the project supply bootstrap"
  #cmd: "terraform init && terraform plan -out plan.out && terraform apply 'plan.out'"
  #cmd: "pwd"
  #workdir: "./terraform/bootstrap"
  
- name: "Iniciar terraform"
  description: "prepara el entorno de trabajo de terraform, descargando los proveedores y configurando el backend de estado"
  cmd: "terraform init"
  #cmd: "terraform init -backend-config='backend.tfvars'"
  workdir: "./terraform"

- name: "Planificar terraform"
  description: "genera un plan de ejecución mostrando los cambios que se aplicarán en la infraestructura"
  cmd: "terraform plan -var-file=\"fastdeploy.tfvars\" -out plan.out"
  workdir: "./terraform"
  templates:
    - "fastdeploy.tfvars"

- name: "Aplicar terraform"
  description: "ejecuta los cambios definidos en el plan para aprovisionar o modificar la infraestructura"
  cmd: "terraform apply 'plan.out'"
  workdir: "./terraform"

  outputs:
    - name: "azure_resource_group_name"
      description: "Devuelve el nombre del grupo de recursos creado en Azure"
      probe: azure_resource_group_name\s*=\s*"([^"]+)"

    - name: "azure_container_registry_name"
      description: "Devuelve el nombre del Azure Container Registry (ACR) creado para almacenar imágenes de contenedores"
      probe: azure_container_registry_name\s*=\s*"([^"]+)"

    - name: "azure_container_registry_login_server"
      description: "Devuelve el dominio del servidor de inicio de sesión del Azure Container Registry para usarlo en el deployment"
      probe: azure_container_registry_login_server\s*=\s*"([^"]+)"

    - name: "azure_kubernetes_cluster_fqdn"
      description: "Devuelve el FQDN del cluster AKS para usar como base del ingress_host"
      probe: azure_kubernetes_cluster_fqdn\s*=\s*"([^"]+)"