- name: "Iniciar sesion con Azure CLI"
  description: "Configurar inicio de sesion"
  cmd: "az login --service-principal --username $ARM_CLIENT_ID --password $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID"

- name: "Configurar credenciales de aks"
  description: "Configurar inicio de sesion"
  cmd: "az aks get-credentials --resource-group ${var.azure_resource_group_name} --name ${var.azure_kubernetes_cluster_name} --overwrite-existing"

- name: "Configura credencial con kubelogin"
  description: "Configurar inicio de sesion"
  cmd: "kubelogin convert-kubeconfig -l azurecli"

- name: "Crear namespace de Kubernetes"
  description: "se crea el namespace de Kubernetes si no existe"
  cmd: "kubectl create namespace ${var.k8s_namespace} --dry-run=client -o yaml | kubectl apply -f -"

- name: "Aplicar manifiestos de Kubernetes"
  description: "aplica los manifiestos de Kubernetes al cluster existente"
  cmd: "kubectl apply -f ."
  workdir: "./k8s"
  templates:
    - "./"

- name: "Verificar deployment"
  description: "verifica que el deployment se haya completado correctamente"
  cmd: "kubectl rollout status deployment/${var.k8s_deployment_name} --namespace ${var.k8s_namespace} --timeout=300s"

- name: "Verificar pods"
  description: "verifica el estado de los pods de la aplicación"
  cmd: "kubectl get pods --namespace ${var.k8s_namespace} -l app.kubernetes.io/name=${var.project_name},environment=${var.environment}"

- name: "Verificar servicios"
  description: "verifica que los servicios estén funcionando correctamente"
  cmd: "kubectl get services --namespace ${var.k8s_namespace} -l app.kubernetes.io/name=${var.project_name},environment=${var.environment}"
