locals {
  # Naming: rg y workspace si no se proveen
  rg_name = var.resource_group_name != "" ? var.resource_group_name : lower(replace("${var.project.name}-${var.environment}-${var.location}", " ", "-"))

  # Determina si el ACR tendrá acceso público: desactivado si hay private endpoint
  # public_network_enabled = var.enable_private_endpoint ? false : true

  # Acción por defecto del firewall cuando hay IPs permitidas definidas
  # default_action = (local.public_network_enabled && length(var.allowed_ip_ranges) > 0) ? "Deny" : "Allow"

  common_tags = merge({
    "project" : var.project.name,
    "environment" : var.environment,
    "managed-by" : "fastdeploy",
    "layer" : "platform",
    "component" : "acr-cache"
  }, var.tags)
}

resource "random_id" "random_rg_name" {
  keepers = {
    value = local.rg_name
  }
  byte_length = 4
}

resource "random_id" "random_cr_name" {
  keepers = {
    value = var.container_registry_name
  }
  byte_length = 8
}

resource "azurerm_resource_group" "this" {
  name     = "${local.rg_name}${random_id.random_rg_name.hex}"
  location = var.location
  tags     = local.common_tags
}

resource "azurerm_container_registry" "acr" {
  name                = "${var.container_registry_name}${random_id.random_cr_name.hex}"
  resource_group_name = azurerm_resource_group.this.name
  location            = azurerm_resource_group.this.location
  # Basic,Standard,Premium
  sku = "Basic"
  # Se recomienda nunca habilitar admin user
  admin_enabled = false
  # ---------------------
  # Solo en sku="Premium"
  # ---------------------
  # true=Internet, false=endpoint private or endpoint service
  # public_network_access_enabled = local.public_network_enabled
  /*
  ---------------------
  Solo en sku="Premium"
  ---------------------
  georeplications {
    location                = "East US"
    zone_redundancy_enabled = true
    tags                    = {}
  }
  georeplications {
    location                = "North Europe"
    zone_redundancy_enabled = true
    tags                    = {}
  } */

  # ---------------------
  # Solo en sku="Premium"
  # ---------------------
  # Retención de manifests sin tag (cache corta)
  # retention_policy_in_days = var.untagged_retention_days

  # Reglas de red (sólo si hay acceso público)
  /* network_rule_set {
    default_action = local.default_action
    dynamic "ip_rule" {
        for_each = var.allowed_ip_ranges
        content {
            action = "Allow"
            ip_range = ip_rule.value
        }
    }
  } */

  # solo si sku=Premium, con "false" no se tiene endpoint separados
  # data_endpoint_enabled = false
}

resource "azurerm_role_assignment" "acr_push" {
  for_each             = toset(var.push_principal_ids)
  scope                = azurerm_container_registry.acr.id
  role_definition_name = "AcrPush"
  principal_id         = each.value
}

resource "azurerm_role_assignment" "acr_pull" {
  for_each             = toset(var.pull_principal_ids)
  scope                = azurerm_container_registry.acr.id
  role_definition_name = "AcrPull"
  principal_id         = each.value
}

//SKU
//  Basic = barato, pruebas o dev.
//  Standard = producción común.
//  Premium = producción empresarial, seguridad, compliance, multi-región.
